{"ast":null,"code":"import axios from 'axios';\nconst adminAxiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/admin/'\n});\n\n// adminAxiosInstance.interceptors.request.use(\n//     (config) => {\n//         const adminToken = localStorage.getItem('adminToken');\n//         if (adminToken) {\n//             config.headers['Authorization'] = `Bearer ${adminToken}`;\n//         }\n\n//         return config;\n//     },\n//     (error) => Promise.reject(error)\n// );  \n\nadminAxiosInstance.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await axios.post('your-api-refresh-endpoint', {\n        refresh: refreshToken\n      });\n      localStorage.setItem('adminToken', response.data.access);\n      originalRequest.headers.Authorization = `Bearer ${response.data.access}`;\n      return adminAxiosInstance(originalRequest);\n    } catch (refreshError) {\n      console.error('Token refresh failed:', refreshError);\n      // Log out the admin or redirect to login\n      localStorage.clear();\n      window.location.href = '/admin-login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default adminAxiosInstance;","map":{"version":3,"names":["axios","adminAxiosInstance","create","baseURL","interceptors","response","use","error","originalRequest","config","status","_retry","refreshToken","localStorage","getItem","post","refresh","setItem","data","access","headers","Authorization","refreshError","console","clear","window","location","href","Promise","reject"],"sources":["/media/donjo/HDD/projects/SwiftShare/frontend/src/adminaxiosconfig.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst adminAxiosInstance = axios.create({\n    baseURL: 'http://localhost:8000/admin/'\n});\n\n// adminAxiosInstance.interceptors.request.use(\n//     (config) => {\n//         const adminToken = localStorage.getItem('adminToken');\n//         if (adminToken) {\n//             config.headers['Authorization'] = `Bearer ${adminToken}`;\n//         }\n\n//         return config;\n//     },\n//     (error) => Promise.reject(error)\n// );  \n\n\n\nadminAxiosInstance.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n        if (error.response.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n            try {\n                const refreshToken = localStorage.getItem('refreshToken');\n                const response = await axios.post('your-api-refresh-endpoint', {\n                    refresh: refreshToken,\n                });\n                localStorage.setItem('adminToken', response.data.access);\n                originalRequest.headers.Authorization = `Bearer ${response.data.access}`;\n                return adminAxiosInstance(originalRequest);\n            } catch (refreshError) {\n                console.error('Token refresh failed:', refreshError);\n                // Log out the admin or redirect to login\n                localStorage.clear();\n                window.location.href = '/admin-login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n\nexport default adminAxiosInstance"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,kBAAkB,GAAGD,KAAK,CAACE,MAAM,CAAC;EACpCC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIAF,kBAAkB,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CACvCD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EACb,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;EACpC,IAAIF,KAAK,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC1DH,eAAe,CAACG,MAAM,GAAG,IAAI;IAC7B,IAAI;MACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACe,IAAI,CAAC,2BAA2B,EAAE;QAC3DC,OAAO,EAAEJ;MACb,CAAC,CAAC;MACFC,YAAY,CAACI,OAAO,CAAC,YAAY,EAAEZ,QAAQ,CAACa,IAAI,CAACC,MAAM,CAAC;MACxDX,eAAe,CAACY,OAAO,CAACC,aAAa,GAAG,UAAUhB,QAAQ,CAACa,IAAI,CAACC,MAAM,EAAE;MACxE,OAAOlB,kBAAkB,CAACO,eAAe,CAAC;IAC9C,CAAC,CAAC,OAAOc,YAAY,EAAE;MACnBC,OAAO,CAAChB,KAAK,CAAC,uBAAuB,EAAEe,YAAY,CAAC;MACpD;MACAT,YAAY,CAACW,KAAK,CAAC,CAAC;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;IACzC;EACJ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACtB,KAAK,CAAC;AAChC,CACJ,CAAC;AAGD,eAAeN,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}