{"ast":null,"code":"import axios from \"axios\";\nimport { ACCESS_TOKEN } from \"./constants\";\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api/\",\n  withCredentials: true,\n  // Add this\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(ACCESS_TOKEN);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Add these headers\n  config.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000';\n  config.headers['Access-Control-Allow-Credentials'] = 'true';\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","ACCESS_TOKEN","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","console"],"sources":["/media/donjo/HDD/projects/SwiftShare/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { ACCESS_TOKEN } from \"./constants\";\n\nconst api = axios.create({\n    baseURL: \"http://127.0.0.1:8000/api/\",\n    withCredentials: true,  // Add this\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n    }\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem(ACCESS_TOKEN);\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        // Add these headers\n        config.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000';\n        config.headers['Access-Control-Allow-Credentials'] = 'true';\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        console.error('API Error:', error);\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,aAAa;AAE1C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAE,4BAA4B;EACrCC,eAAe,EAAE,IAAI;EAAG;EACxBC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AAEFJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACZ,YAAY,CAAC;EAChD,IAAIU,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACA;EACAD,MAAM,CAACJ,OAAO,CAAC,6BAA6B,CAAC,GAAG,uBAAuB;EACvEI,MAAM,CAACJ,OAAO,CAAC,kCAAkC,CAAC,GAAG,MAAM;EAC3D,OAAOI,MAAM;AACjB,CAAC,EACAI,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAZ,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CACxBQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACPI,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}